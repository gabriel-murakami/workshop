---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/login":
    post:
      summary: User login and receives JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: JWT token returned
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: admin@admin.com
                password:
                  type: string
                  example: password123
              required:
              - email
              - password
  "/products":
    get:
      summary: List all products
      tags:
      - Product
      security:
      - bearerAuth: []
      responses:
        '200':
          description: products found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                      nullable: true
                    stock_quantity:
                      type: integer
                    base_price:
                      type: string
                  required:
                  - id
                  - name
                  - stock_quantity
                  - base_price
    post:
      summary: Create a new product
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: product created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                stock_quantity:
                  type: integer
                base_price:
                  type: string
                sku:
                  type: string
              required:
              - name
              - stock_quantity
              - base_price
              - sku
  "/products/{id}":
    get:
      summary: Get product by id
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Auto part ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  stock_quantity:
                    type: integer
                  base_price:
                    type: string
                required:
                - id
                - name
                - stock_quantity
                - base_price
        '404':
          description: product not found
    put:
      summary: Update product by id
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                stock_quantity:
                  type: integer
                base_price:
                  type: string
              required:
              - id
              - name
              - stock_quantity
              - base_price
    delete:
      summary: Delete product by id
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product deleted
        '404':
          description: product not found
  "/products/{id}/add":
    post:
      summary: Add stock quantity to product
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stock added
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stock_change:
                  type: integer
              required:
              - stock_change
  "/products/{id}/remove":
    post:
      summary: Remove stock quantity from product
      tags:
      - Product
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: stock removed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stock_change:
                  type: integer
              required:
              - stock_change
  "/budgets":
    get:
      summary: Filtered by document number
      tags:
      - Budgets
      security:
      - bearerAuth: []
      responses:
        '200':
          description: budgets found with filter
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    service_order_id:
                      type: integer
                    date:
                      type: string
                      format: date
                    total_value:
                      type: string
                    status:
                      type: string
                  required:
                  - id
                  - service_order_id
                  - date
                  - total_value
                  - status
      parameters:
      - name: document_number
        in: query
        description: Customer document number to filter budgets
        schema:
          type: string
  "/budgets/{id}":
    get:
      summary: Get budget by id
      tags:
      - Budgets
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Budget ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: budget found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  service_order_id:
                    type: integer
                  date:
                    type: string
                    format: date
                  total_value:
                    type: string
                  status:
                    type: string
                required:
                - id
                - service_order_id
                - date
                - total_value
                - status
        '404':
          description: budget not found
  "/budgets/{id}/approve":
    post:
      summary: Approve a budget
      tags:
      - Budgets
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Budget ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: budget approved
        '404':
          description: budget not found
  "/budgets/{id}/reject":
    post:
      summary: Reject a budget
      tags:
      - Budgets
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Budget ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: budget rejected
        '404':
          description: budget not found
  "/customers":
    get:
      summary: List all customers
      tags:
      - Customers
      security:
      - bearerAuth: []
      responses:
        '200':
          description: customers found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    document_number:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                  required:
                  - id
                  - name
                  - document_number
                  - email
                  - phone
    post:
      summary: Create a new customer
      tags:
      - Customers
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: customer created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                document_number:
                  type: string
                email:
                  type: string
                phone:
                  type: string
              required:
              - name
              - document_number
              - email
              - phone
  "/customers/{document_number}":
    get:
      summary: Get customer by document number
      tags:
      - Customers
      security:
      - bearerAuth: []
      parameters:
      - name: document_number
        in: path
        description: Customer document number
        required: true
        schema:
          type: string
      responses:
        '200':
          description: customer found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  document_number:
                    type: string
                  email:
                    type: string
                  phone:
                    type: string
                  vehicles:
                    type: array
                    items:
                      type: object
                      properties:
                        license_plate:
                          type: string
                      required:
                      - license_plate
                required:
                - id
                - name
                - document_number
                - email
                - phone
                - vehicles
        '404':
          description: customer not found
  "/customers/{id}":
    put:
      summary: Update customer by id
      tags:
      - Customers
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: customer updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                document_number:
                  type: string
                email:
                  type: string
                phone:
                  type: string
              required:
              - id
              - name
              - document_number
              - email
              - phone
    delete:
      summary: Delete customer by id
      tags:
      - Customers
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: customer deleted
        '404':
          description: customer not found
  "/customers/{document_number}/add_vehicle":
    patch:
      summary: Add vehicle to customer
      tags:
      - Customers
      security:
      - bearerAuth: []
      parameters:
      - name: document_number
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: vehicle added
        '404':
          description: customer not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
              required:
              - license_plate
  "/metrics":
    get:
      summary: List all metrics
      tags:
      - Metrics
      security:
      - bearerAuth: []
      responses:
        '200':
          description: metrics found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    service_order_count:
                      type: integer
                    average_time:
                      type: number
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - service_order_count
                  - average_time
                  - created_at
                  - updated_at
  "/service_orders/{id}":
    get:
      summary: Get a service order by ID
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  customer_id:
                    type: integer
                  vehicle_id:
                    type: integer
                  status:
                    type: string
                  description:
                    type: string
                    nullable: true
                  service_started_at:
                    type: string
                    format: date-time
                    nullable: true
                  service_finished_at:
                    type: string
                    format: date-time
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  service_order_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quantity:
                          type: integer
                        total_value:
                          type: string
                        item_type:
                          type: string
                        item_id:
                          type: integer
                      required:
                      - id
                      - quantity
                      - total_value
                      - item_type
                      - item_id
                required:
                - id
                - customer_id
                - vehicle_id
                - status
                - created_at
                - updated_at
                - service_order_items
        '404':
          description: service order not found
  "/service_orders/{id}/send_to_diagnosis":
    post:
      summary: Send service order to diagnosis
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service order sent to diagnosis
        '404':
          description: service order not found
  "/service_orders/{id}/send_to_approval":
    post:
      summary: Send service order to waiting approval
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service order sent to waiting approval
        '404':
          description: service order not found
  "/service_orders":
    get:
      summary: List all service orders
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    customer_id:
                      type: integer
                    vehicle_id:
                      type: integer
                    service_started_at:
                      type: string
                      format: date-time
                      nullable: true
                    service_finished_at:
                      type: string
                      format: date-time
                      nullable: true
                    status:
                      type: string
                    description:
                      type: string
                      nullable: true
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - customer_id
                  - vehicle_id
                  - status
                  - created_at
                  - updated_at
  "/service_orders/{id}/add_services":
    post:
      summary: Add services to a service order
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: services added
        '422':
          description: invalid services
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                services_codes:
                  type: array
                  items:
                    type: string
                    pattern: "^SVC.*"
              required:
              - services_codes
  "/service_orders/{id}/add_products":
    post:
      summary: Add products to a service order
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: products added
        '422':
          description: invalid products
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products_params:
                  type: array
                  items:
                    type: object
                    properties:
                      sku:
                        type: string
                        pattern: "^AP.*"
                      quantity:
                        type: integer
                    required:
                    - sku
                    - quantity
              required:
              - products_params
  "/service_orders/{id}/start":
    post:
      summary: Start a service order
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service order started
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  customer_id:
                    type: integer
                  vehicle_id:
                    type: integer
                  service_started_at:
                    type: string
                    format: date-time
                    nullable: true
                  service_finished_at:
                    type: string
                    format: date-time
                    nullable: true
                  status:
                    type: string
                  description:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - customer_id
                - vehicle_id
                - status
                - created_at
                - updated_at
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
              - id
  "/service_orders/{id}/finish":
    post:
      summary: Finish a service order
      tags:
      - Service Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service order finished
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  customer_id:
                    type: integer
                  vehicle_id:
                    type: integer
                  service_started_at:
                    type: string
                    format: date-time
                    nullable: true
                  service_finished_at:
                    type: string
                    format: date-time
                    nullable: true
                  status:
                    type: string
                  description:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - customer_id
                - vehicle_id
                - status
                - created_at
                - updated_at
  "/services":
    get:
      summary: List all services
      tags:
      - Services
      security:
      - bearerAuth: []
      responses:
        '200':
          description: services found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
                      nullable: true
                    base_price:
                      type: string
                  required:
                  - id
                  - name
                  - base_price
    post:
      summary: Create a new service
      tags:
      - Services
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: service created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                base_price:
                  type: string
                code:
                  type: string
              required:
              - name
              - base_price
              - code
  "/services/{id}":
    get:
      summary: Get service by id
      tags:
      - Services
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Service ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                    nullable: true
                  base_price:
                    type: string
                required:
                - id
                - name
                - base_price
        '404':
          description: service not found
    put:
      summary: Update service by id
      tags:
      - Services
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                base_price:
                  type: string
              required:
              - id
              - name
              - base_price
    delete:
      summary: Delete service by id
      tags:
      - Services
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: service deleted
        '404':
          description: service not found
  "/vehicles":
    get:
      summary: List all vehicles
      tags:
      - Vehicles
      security:
      - bearerAuth: []
      responses:
        '200':
          description: vehicles found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    license_plate:
                      type: string
                    brand:
                      type: string
                    model:
                      type: string
                    year:
                      type: integer
                    customer_id:
                      type: integer
                  required:
                  - id
                  - license_plate
                  - brand
                  - model
                  - year
                  - customer_id
    post:
      summary: Create a new vehicle
      tags:
      - Vehicles
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: vehicle created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                license_plate:
                  type: string
                brand:
                  type: string
                model:
                  type: string
                year:
                  type: integer
                customer_id:
                  type: integer
              required:
              - license_plate
              - brand
              - model
              - year
              - customer_id
  "/vehicles/{license_plate}":
    get:
      summary: Get vehicle by license plate
      tags:
      - Vehicles
      security:
      - bearerAuth: []
      parameters:
      - name: license_plate
        in: path
        description: Vehicle license plate
        required: true
        schema:
          type: string
      responses:
        '200':
          description: vehicle found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  license_plate:
                    type: string
                  brand:
                    type: string
                  model:
                    type: string
                  year:
                    type: integer
                  customer_id:
                    type: integer
                required:
                - id
                - license_plate
                - brand
                - model
                - year
                - customer_id
        '404':
          description: vehicle not found
  "/vehicles/{id}":
    put:
      summary: Update vehicle by id
      tags:
      - Vehicles
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: vehicle updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                license_plate:
                  type: string
                brand:
                  type: string
                model:
                  type: string
                year:
                  type: integer
                customer_id:
                  type: integer
              required:
              - id
              - license_plate
              - brand
              - model
              - year
              - customer_id
    delete:
      summary: Delete vehicle by id
      tags:
      - Vehicles
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: vehicle deleted
        '404':
          description: vehicle not found
servers:
- url: http://localhost:3000
